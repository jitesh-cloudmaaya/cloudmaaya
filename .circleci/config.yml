# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
     docker:
       - image: circleci/python:2.7.13
       - image: circleci/mysql:5.7
         environment:
           MYSQL_ROOT_PASSWORD: password
           MYSQL_DATABASE: catalogue_service
       - image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2

     working_directory: ~/repo

     steps:
       - checkout
       - setup_remote_docker:
           docker_layer_caching: true

       - run: 
          name: Build Shopping Service Docker Image
          command: docker build -t allumestyle/catalogue-service:$(git branch | grep \* | cut -d ' ' -f2 | sed 's/\///g') .

       - run:
          name: Run Tests
          command: docker run  --entrypoint="/docker-entrypoint-test-circleci.sh" allumestyle/catalogue-service:$(git branch | grep \* | cut -d ' ' -f2 | sed 's/\///g')

       - run:  
          name: Set Docker Hub Creds
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
       - run:  
          name: Push the tagged image to Docker Hub
          command: docker push allumestyle/catalogue-service:$(git branch | grep \* | cut -d ' ' -f2 | sed 's/\///g')

  deploy_qa:
     docker:
      - image: circleci/python:2.7.13
     working_directory: ~/repo  
     steps:
       - checkout
       - run:
           name: Install Fabric==1.14.0
           command: |
              virtualenv venv
              . venv/bin/activate
              pip install Fabric==1.14.0
       - run:
           name: Deploy if tests pass and branch is "develop"
           command: |
               . venv/bin/activate
               fab qa deploy

  deploy_uat:
     docker:
      - image: circleci/python:2.7.13
     working_directory: ~/repo  
     steps:
       - checkout
       - run:
           name: Install Fabric==1.14.0
           command: |
              virtualenv venv
              . venv/bin/activate
              pip install Fabric==1.14.0
       - run:
           name: Deploy if tests pass and tag is "uat"
           command: |
               . venv/bin/activate
               fab uat:docker_tag=$(git branch | grep \* | cut -d ' ' -f2 | sed 's/\///g') deploy

  deploy_prod:
     docker:
      - image: circleci/python:2.7.13
     working_directory: ~/repo  
     steps:
       - checkout
       - run:
           name: Install Fabric==1.14.0
           command: |
              virtualenv venv
              . venv/bin/activate
              pip install Fabric==1.14.0
       - run:
           name: Deploy if tests pass and branch is "master"
           command: |
               . venv/bin/activate
               fab prod deploy

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy_qa:
          requires:
            - build
          filters:
#            branches:
#              only: develop
            tags:
              only: develop
      - deploy_uat:
          requires:
            - build
          filters:
            tags:
              only: uat
      - deploy_prod:
          requires:
            - build
          filters:
            branches:
              only: master
